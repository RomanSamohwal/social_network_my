{"version":3,"sources":["components/common/MessageBody/Message.module.css","components/Dialigs/Dialogs.module.css","components/hoc/withAuthRedirect.js","components/common/MessageBody/Messages.jsx","components/common/MessageBody/Message.jsx","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/Dialog/Dialog.js","components/common/Material_ui/SelectedDialogs.js","components/common/Material_ui/ButtonSend.js","components/Dialigs/Dialogs.js","components/Dialigs/DialogsContainer.js"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","Messages","props","className","s","wrapper","before","ImageAvatars","avatar","cloud","name","text","MessageWithoutIcon","ListItemAvatar","React","ref","classes","other","_objectWithoutProperties","context","ListContext","_extends","clsx","root","alignItems","alignItemsFlexStart","withStyles","minWidth","flexShrink","marginTop","DialogTitle","children","_props$disableTypogra","disableTypography","Typography","component","variant","margin","padding","flex","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","BackdropProps","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onClose","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","open","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","mouseDownTarget","Modal","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","role","container","concat","capitalize","onMouseUp","event","target","currentTarget","current","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","theme","position","scrollPaper","display","justifyContent","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","outline","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","_defineProperty","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","SimpleDialog","selectedValue","aria-labelledby","id","List","dialogs","map","d","ListItem","button","onClick","value","key","Avatar","src","photos","small","style","textDecoration","to","userName","hasNewMessages","SimpleDialogDemo","useState","setOpen","setSelectedValue","Button","color","useStyles","makeStyles","spacing","IconLabelButtons","endIcon","sendMessage","flexWrap","backgroundColor","Dialogs","history","useHistory","useEffect","userId","push","message","setState","fetching","Preloader","Container","ChooseDialogs","dialogsPage","messages","m","viewed","MessageRecipient","unread","senderName","login","Message","body","user","find","MessageSender","large","selectedDialogId","enterMessage","Input","rows","onChange","e","onTextareaHandler","placeholder","DialogsContainer","this","init","handleDrawerClose","prevProps","prevState","snapshot","updateDialog","Component","compose","connect","currentDialogId","newMessagesCount","currentDialogMessagesCount","getDialogs","startDialog","getMessages","setCurrentDialogSuccess","RedirectComponent"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,KAAO,wB,oBCAtLD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,0BAA0B,iBAAmB,kCAAkC,OAAS,wBAAwB,cAAgB,+BAA+B,aAAe,8BAA8B,OAAS,wBAAwB,aAAe,8BAA8B,OAAS,wBAAwB,wBAA0B,2C,qHCGhcC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,S,6DCeRE,EAhBE,SAACC,GACd,OAAO,yBAAKC,UAAWC,IAAEC,SACrB,yBAAKF,UAAWC,IAAEE,QAAQ,kBAACC,EAAA,EAAD,CAAcC,OAAUN,EAAMM,UACxD,yBAAKL,UAAWC,IAAEK,OACd,yBAAKN,UAAWC,IAAEK,OACd,yBAAKN,UAAWC,IAAEM,MAAOR,EAAMQ,MAC9BR,EAAMS,S,SCORC,EAdY,SAACV,GACxB,OAAO,yBAAKC,UAAWC,IAAEC,SACrB,yBAAKF,UAAWC,IAAEK,OACd,yBAAKN,UAAWC,IAAEK,OACd,yBAAKN,UAAWC,IAAEM,MAAOR,EAAMQ,MAC9BR,EAAMS,S,+ECenBE,EAA8BC,cAAiB,SAAwBZ,EAAOa,GAChF,IAAIC,EAAUd,EAAMc,QAChBb,EAAYD,EAAMC,UAClBc,EAAQC,YAAyBhB,EAAO,CAAC,UAAW,cAEpDiB,EAAUL,aAAiBM,KAC/B,OAAoBN,gBAAoB,MAAOO,YAAS,CACtDlB,UAAWmB,YAAKN,EAAQO,KAAMpB,EAAkC,eAAvBgB,EAAQK,YAA+BR,EAAQS,qBACxFV,IAAKA,GACJE,OAwBUS,cAjDK,CAElBH,KAAM,CACJI,SAAU,GACVC,WAAY,GAIdH,oBAAqB,CACnBI,UAAW,IAwCmB,CAChCnB,KAAM,qBADOgB,CAEZb,G,SC3CCiB,EAA2BhB,cAAiB,SAAqBZ,EAAOa,GAC1E,IAAIgB,EAAW7B,EAAM6B,SACjBf,EAAUd,EAAMc,QAChBb,EAAYD,EAAMC,UAClB6B,EAAwB9B,EAAM+B,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/Df,EAAQC,YAAyBhB,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,OAAoBY,gBAAoB,MAAOO,YAAS,CACtDlB,UAAWmB,YAAKN,EAAQO,KAAMpB,GAC9BY,IAAKA,GACJE,GAAQgB,EAAoBF,EAAwBjB,gBAAoBoB,IAAY,CACrFC,UAAW,KACXC,QAAS,MACRL,OA8BUL,cApDK,CAElBH,KAAM,CACJc,OAAQ,EACRC,QAAS,YACTC,KAAM,aA+CwB,CAChC7B,KAAM,kBADOgB,CAEZI,G,2DCqFCU,EAA4B,CAC9BC,MAAOC,IAASC,eAChBC,KAAMF,IAASG,eAMbC,EAAsBhC,cAAiB,SAAgBZ,EAAOa,GAChE,IAAIgC,EAAgB7C,EAAM6C,cACtBhB,EAAW7B,EAAM6B,SACjBf,EAAUd,EAAMc,QAChBb,EAAYD,EAAMC,UAClB6C,EAAwB9C,EAAM+C,qBAC9BA,OAAiD,IAA1BD,GAA2CA,EAClEE,EAAwBhD,EAAMiD,qBAC9BA,OAAiD,IAA1BD,GAA2CA,EAClEE,EAAoBlD,EAAMmD,WAC1BA,OAAmC,IAAtBD,GAAuCA,EACpDE,EAAmBpD,EAAMqD,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAkBtD,EAAMuD,SACxBA,OAA+B,IAApBD,EAA6B,KAAOA,EAC/CE,EAAkBxD,EAAMwD,gBACxBC,EAAUzD,EAAMyD,QAChBC,EAAU1D,EAAM0D,QAChBC,EAAY3D,EAAM2D,UAClBC,EAAa5D,EAAM4D,WACnBC,EAAkB7D,EAAM6D,gBACxBC,EAAS9D,EAAM8D,OACfC,EAAW/D,EAAM+D,SACjBC,EAAYhE,EAAMgE,UAClBC,EAAOjE,EAAMiE,KACbC,EAAwBlE,EAAMmE,eAC9BA,OAA2C,IAA1BD,EAAmCE,IAAQF,EAC5DG,EAAoBrE,EAAMsE,WAC1BA,OAAmC,IAAtBD,EAA+B,GAAKA,EACjDE,EAAgBvE,EAAMwE,OACtBA,OAA2B,IAAlBD,EAA2B,QAAUA,EAC9CE,EAAwBzE,EAAM0E,oBAC9BA,OAAgD,IAA1BD,EAAmCE,IAAOF,EAChEG,EAAwB5E,EAAM6E,mBAC9BA,OAA+C,IAA1BD,EAAmCtC,EAA4BsC,EACpFE,EAAkB9E,EAAM8E,gBACxBC,EAAkB/E,EAAM,oBACxBgF,EAAiBhF,EAAM,mBACvBe,EAAQC,YAAyBhB,EAAO,CAAC,gBAAiB,WAAY,UAAW,YAAa,uBAAwB,uBAAwB,aAAc,YAAa,WAAY,kBAAmB,UAAW,UAAW,YAAa,aAAc,kBAAmB,SAAU,WAAY,YAAa,OAAQ,iBAAkB,aAAc,SAAU,sBAAuB,qBAAsB,kBAAmB,mBAAoB,oBAErbiF,EAAkBrE,WA6BtB,OAAoBA,gBAAoBsE,IAAO/D,YAAS,CACtDlB,UAAWmB,YAAKN,EAAQO,KAAMpB,GAC9BkF,kBAAmBC,IACnBvC,cAAe1B,YAAS,CACtB0D,mBAAoBA,GACnBhC,GACHwC,sBAAsB,EACtBtC,qBAAsBA,EACtBE,qBAAsBA,EACtBY,gBAAiBA,EACjBJ,QAASA,EACTQ,KAAMA,EACNpD,IAAKA,GACJE,GAAqBH,gBAAoB8D,EAAqBvD,YAAS,CACxEmE,QAAQ,EACRC,GAAItB,EACJuB,QAASX,EACTnB,QAASA,EACTE,WAAYA,EACZD,UAAWA,EACXG,OAAQA,EACRE,UAAWA,EACXD,SAAUA,EACV0B,KAAM,qBACLX,GAA+BlE,gBAAoB,MAAO,CAC3DX,UAAWmB,YAAKN,EAAQ4E,UAAW5E,EAAQ,SAAS6E,OAAOC,YAAWpB,MACtEqB,UAjDwB,SAA6BC,GAGjDA,EAAMC,SAAWD,EAAME,eAKvBF,EAAMC,SAAWd,EAAgBgB,UAIrChB,EAAgBgB,QAAU,KAEtBzC,GACFA,EAAgBsC,IAGb/C,GAAwBU,GAC3BA,EAAQqC,EAAO,mBA+BjBI,YAtDoB,SAAyBJ,GAC7Cb,EAAgBgB,QAAUH,EAAMC,SAsDlBnF,gBAAoBuD,EAAgBhD,YAAS,CAC3DgF,UAAW,GACXV,KAAM,SACN,mBAAoBV,EACpB,kBAAmBC,GAClBV,EAAY,CACbrE,UAAWmB,YAAKN,EAAQsF,MAAOtF,EAAQ,cAAc6E,OAAOC,YAAWpB,KAAW1D,EAAQ,aAAa6E,OAAOC,YAAWS,OAAO9C,MAAce,EAAWrE,UAAWkD,GAAcrC,EAAQwF,gBAAiBjD,GAAavC,EAAQyF,kBAC9N1E,SA8JSL,eAnZK,SAAgBgF,GAClC,MAAO,CAELnF,KAAM,CACJ,eAAgB,CAEdoF,SAAU,wBAKdC,YAAa,CACXC,QAAS,OACTC,eAAgB,SAChBtF,WAAY,UAIduF,WAAY,CACVC,UAAW,OACXC,UAAW,SACXC,UAAW,SACX,UAAW,CACTC,QAAS,KACTN,QAAS,eACTO,cAAe,SACfC,OAAQ,OACRC,MAAO,MAKX1B,UAAW,CACTyB,OAAQ,OACR,eAAgB,CACdA,OAAQ,QAGVE,QAAS,GAIXjB,MAAO,CACLjE,OAAQ,GACRsE,SAAU,WACVK,UAAW,OAEX,eAAgB,CACdA,UAAW,UACXQ,UAAW,SAKfC,iBAAkB,CAChBZ,QAAS,OACTa,cAAe,SACfC,UAAW,qBAIbC,gBAAiB,CACff,QAAS,eACTO,cAAe,SACfF,UAAW,QAKbW,gBAAiB,CACfpE,SAAU,qBAIZqE,aAAc,CACZrE,SAAUsE,KAAKC,IAAItB,EAAMuB,YAAYC,OAAOC,GAAI,KAChD,oBAAqBC,YAAgB,GAAI1B,EAAMuB,YAAYI,KAAKN,KAAKC,IAAItB,EAAMuB,YAAYC,OAAOC,GAAI,KAAO,IAAS,CACpH1E,SAAU,uBAKd6E,aAAc,CACZ7E,SAAUiD,EAAMuB,YAAYC,OAAOK,GACnC,oBAAqBH,YAAgB,GAAI1B,EAAMuB,YAAYI,KAAK3B,EAAMuB,YAAYC,OAAOK,GAAK,IAAS,CACrG9E,SAAU,uBAKd+E,aAAc,CACZ/E,SAAUiD,EAAMuB,YAAYC,OAAOO,GACnC,oBAAqBL,YAAgB,GAAI1B,EAAMuB,YAAYI,KAAK3B,EAAMuB,YAAYC,OAAOO,GAAK,IAAS,CACrGhF,SAAU,uBAKdiF,aAAc,CACZjF,SAAUiD,EAAMuB,YAAYC,OAAOS,GACnC,oBAAqBP,YAAgB,GAAI1B,EAAMuB,YAAYI,KAAK3B,EAAMuB,YAAYC,OAAOS,GAAK,IAAS,CACrGlF,SAAU,uBAKdmF,aAAc,CACZnF,SAAUiD,EAAMuB,YAAYC,OAAOW,GACnC,oBAAqBT,YAAgB,GAAI1B,EAAMuB,YAAYI,KAAK3B,EAAMuB,YAAYC,OAAOW,GAAK,IAAS,CACrGpF,SAAU,uBAKdgD,eAAgB,CACda,MAAO,qBAITd,gBAAiB,CACfnE,OAAQ,EACRiF,MAAO,OACP7D,SAAU,OACV4D,OAAQ,OACRM,UAAW,OACXmB,aAAc,EACd,oBAAqB,CACnBzG,OAAQ,EACRoB,SAAU,YAmRgB,CAChC/C,KAAM,aADOgB,CAEZoB,G,0BCvZH,SAASiG,EAAa7I,GAAQ,IAElByD,EAAiCzD,EAAjCyD,QAASqF,EAAwB9I,EAAxB8I,cAAe7E,EAASjE,EAATiE,KAUhC,OACI,kBAAC,EAAD,CAAQR,QATQ,WAChBA,EAAQqF,IAQsBC,kBAAgB,sBAAsB9E,KAAMA,GACtE,kBAAC,EAAD,CAAa+E,GAAG,uBAAhB,sBACA,kBAACC,EAAA,EAAD,KACKjJ,EAAMkJ,QAAQC,KAAI,SAAAC,GAAC,OAChB,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBATbC,EASuCJ,EAAEJ,QARlEvF,EAAQ+F,GADgB,IAACA,GAS8CC,IAAKL,EAAEK,KAC9D,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,IAAKP,EAAEQ,OAAOC,OAClB,kBAAC,IAAD,QAGR,kBAAC,IAAD,CAASC,MAAO,CAACC,eAAgB,QAASC,GAAE,mBAAcZ,EAAEJ,KAAOI,EAAEa,UACpEb,EAAEc,gBAAkB,WAQ9B,SAASC,EAAiBnK,GAAQ,IAAD,EAGpBY,IAAMwJ,UAAS,GAHK,mBAGrCnG,EAHqC,KAG/BoG,EAH+B,OAIFzJ,IAAMwJ,SAASpK,EAAMkJ,SAJnB,mBAIrCJ,EAJqC,KAItBwB,EAJsB,KAe5C,OACI,6BACI,6BACA,kBAACC,EAAA,EAAD,CAAQrI,QAAS,YAAasI,MAAM,UAAUjB,QAZ9B,WACpBc,GAAQ,KAWJ,eAGA,kBAACxB,EAAD,CAAcC,cAAeA,EAAe7E,KAAMA,EAAMR,QAX5C,SAAC+F,GACjBa,GAAQ,GACRC,EAAiBd,IASiEN,QAASlJ,EAAMkJ,W,2CC3DnGuB,GAAYC,aAAW,SAAClE,GAAD,MAAY,CACrC8C,OAAQ,CACJnH,OAAQqE,EAAMmE,QAAQ,QAIf,SAASC,GAAiB5K,GACrC,IAAMc,EAAU2J,KAEhB,OACI,6BACI,kBAACF,EAAA,EAAD,CACIrI,QAAQ,YACRsI,MAAM,UACNvK,UAAWa,EAAQwI,OACnBuB,QAAS,kBAAC,KAAD,MACTtB,QAASvJ,EAAM8K,aALnB,S,aCHNL,GAAYC,aAAW,SAAClE,GAAD,MAAY,CACrCnF,KAAM,CACFsF,QAAS,OACToE,SAAU,OACV,QAAS,CACLC,gBAAiB,gBAKhBC,GAAU,SAACjL,GAEpB,IAAIkL,EAAUC,cAEdC,qBAAU,WACIpL,EAAMqL,QACRH,EAAQI,KAAK,OACb,IAEZ,IAaIC,EAbEzK,EAAU2J,KATa,EAWLL,mBAAS,IAXJ,mBAWxBxK,EAXwB,KAWjB4L,EAXiB,KAwB7B,OAAIxL,EAAMyL,SACC,kBAACC,GAAA,EAAD,MAGJ,yBAAK5B,MAAO,CAAC1C,MAAO,SACvB,kBAACuE,EAAA,EAAD,CAAWpI,SAAU,KAAKuG,MAAO,CAAC1H,QAAS,SACvC,kBAACgC,EAAA,EAAD,CAAOnE,UAAWa,EAAQO,MACtB,yBACIpB,UAAWC,IAAEgJ,SACb,yBAAKjJ,UAAWC,IAAE0L,eACd,6BACI,kBAAC,EAAD,CAAiB1C,QAASlJ,EAAM6L,YAAY3C,YAGnDlJ,EAAMqL,QAAU,6BACb,yBAAKpL,UAAWC,IAAE4L,UACb9L,EAAM6L,YAAYC,SAAS3C,KAAI,SAAA4C,GAI5B,GAFIR,EAAUQ,EAAEC,OAAS9L,IAAE+L,iBAAmB/L,IAAE+L,iBAAmB,IAAM/L,IAAEgM,OAEvEH,EAAEI,aAAenM,EAAMoM,MAEvB,OAAO,yBAAK3C,IAAKsC,EAAE/C,GAAI/I,UAAWsL,GAC9B,kBAACc,EAAD,CAAoB7L,KAAMuL,EAAEI,WAAY1L,KAAMsL,EAAEO,QAIpD,IAAIC,EAAOvM,EAAM6L,YAAY3C,QAAQsD,MAAK,SAACpD,GACvC,GAAIA,EAAEJ,IAAMhJ,EAAMqL,OACd,OAAOjC,KAGf,OAAO,yBAAKK,IAAKsC,EAAE/C,GAAI/I,UAAWC,IAAEuM,eAChC,kBAAC,EAAD,CAAUjM,KAAMuL,EAAEI,WAAY1L,KAAMsL,EAAEO,KAAMhM,OAAQiM,EAAK3C,OAAOC,OAAO0C,EAAK3C,OAAO8C,aAKlG1M,EAAM2M,kBACP,yBAAK1M,UAAWC,IAAE0M,cACd,6BACI,kBAACC,EAAA,EAAD,CAAOrD,MAAO5J,EAAOkN,KAAM,EAAGC,SAAU,SAACC,GAAD,OA/C5C,SAACA,GACtBxB,EAAUwB,EAAEhH,cAAcwD,OA+CGyD,CAAkBD,IAAIE,YAAa,4BACvC,yBAAKjN,UAAWC,IAAEoJ,QACd,kBAAC,GAAD,CAAYwB,YAvD1B,WACd9K,EAAM8K,YAAY9K,EAAM2M,iBAAkB/M,GAC1C4L,EAAS,gB,kDCxBV,IAAM2B,GAAb,kLAGQC,KAAKpN,MAAMqN,KAAKD,KAAKpN,MAAMqL,QAC3B+B,KAAKpN,MAAMsN,sBAJnB,yCAOuBC,EAAWC,EAAWC,GACjCL,KAAKpN,MAAMqL,SAAWkC,EAAUlC,QAChC+B,KAAKpN,MAAM0N,aAAaN,KAAKpN,MAAMqL,UAT/C,+BAcQ,OAAO,oCACH,kBAAC,GAAY+B,KAAKpN,YAf9B,GAAsCY,IAAM+M,WAkC7BC,sBACXC,aAdkB,SAACjO,GAEnB,MAAO,CACHiM,YAAajM,EAAMiM,YACnBiC,gBAAiBlO,EAAMiM,YAAY3C,QAAQF,GAC3C+E,iBAAkBnO,EAAMiM,YAAYkC,iBACpCpB,iBAAkB/M,EAAMiM,YAAYc,iBACpCqB,2BAA4BpO,EAAMiM,YAAYmC,2BAC9C5B,MAAOxM,EAAME,KAAKsM,MAClBX,SAAU7L,EAAMiM,YAAYJ,YAKP,CACrBwC,eACAC,gBACAC,gBACAC,4BACAf,SACAK,iBACA5C,mBThDwB,SAAC6C,GAAe,IAEtCU,EAFqC,uKAInC,OAAKjB,KAAKpN,MAAMH,OACT,kBAAC8N,EAAcP,KAAKpN,OADI,kBAAC,IAAD,CAAUgK,GAAI,gBAJV,GAEXpJ,IAAM+M,WAStC,OAFoCE,YAAQlO,EAARkO,CAAoCQ,KS+B7DT,CAYdT","file":"static/js/0.709a9db1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cloud\":\"Message_cloud__2O3Wg\",\"wrapper\":\"Message_wrapper__3yFJ3\",\"before\":\"Message_before__13Aig\",\"name\":\"Message_name__bMrdK\",\"text\":\"Message_text__2kCaW\",\"time\":\"Message_time__3JGjc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__37SQj\",\"ChooseDialogs\":\"Dialogs_ChooseDialogs__FyFCx\",\"messages\":\"Dialogs_messages__3fddC\",\"MessageRecipient\":\"Dialogs_MessageRecipient__2eDdC\",\"unread\":\"Dialogs_unread__297ep\",\"MessageSender\":\"Dialogs_MessageSender__1V1l5\",\"enterMessage\":\"Dialogs_enterMessage__FqfRV\",\"button\":\"Dialogs_button__3qPlI\",\"dialogsItems\":\"Dialogs_dialogsItems__1w9ex\",\"active\":\"Dialogs_active__3xDzq\",\"newMessagesNotification\":\"Dialogs_newMessagesNotification__3kUpO\"};","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"./login\"}/>;\n            return <Component {...this.props}/>\n        }\n    }\n\n   let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n};","import React from 'react';\nimport s from \"./Message.module.css\";\nimport ImageAvatars from '../Material_ui/ImageAvatars';\n\nconst Messages = (props) => {\n    return <div className={s.wrapper}>\n        <div className={s.before}><ImageAvatars avatar = {props.avatar}/></div>\n        <div className={s.cloud}>\n            <div className={s.cloud}>\n                <div className={s.name}>{props.name}</div>\n                {props.text}\n                {/*<div className={s.time}>\n                    time\n                </div>*/}\n            </div>\n\n        </div>\n    </div>\n}\n\nexport default Messages;","import React from 'react';\nimport s from \"./Message.module.css\";\n\nconst MessageWithoutIcon = (props) => {\n    return <div className={s.wrapper}>\n        <div className={s.cloud}>\n            <div className={s.cloud}>\n                <div className={s.name}>{props.name}</div>\n                {props.text}\n               {/* <div className={s.time}>\n                    time\n                </div>*/}\n            </div>\n        </div>\n    </div>\n}\n\nexport default MessageWithoutIcon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport {NavLink} from 'react-router-dom';\n\nfunction SimpleDialog(props) {\n\n    const { onClose, selectedValue, open } = props;\n\n    const handleClose = () => {\n        onClose(selectedValue);\n    };\n\n    const handleListItemClick = (value) => {\n        onClose(value);\n    };\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n            <List>\n                {props.dialogs.map(d => (\n                    <ListItem button onClick={() => handleListItemClick(d.id)} key={d.key}>\n                        <ListItemAvatar>\n                            <Avatar src={d.photos.small}>\n                                <PersonIcon/>\n                            </Avatar>\n                        </ListItemAvatar>\n                        <NavLink style={{textDecoration: 'none'}} to={`/dialogs/${d.id}`}>{d.userName}</NavLink>\n                        {d.hasNewMessages && '!!'}\n                    </ListItem>\n                ))}\n            </List>\n        </Dialog>\n    );\n}\n\nexport default function SimpleDialogDemo(props) {\n\n\n    const [open, setOpen] = React.useState(false);\n    const [selectedValue, setSelectedValue] = React.useState(props.dialogs);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (value) => {\n        setOpen(false);\n        setSelectedValue(value);\n    };\n\n    return (\n        <div>\n            <br/>\n            <Button variant={'contained'} color=\"primary\" onClick={handleClickOpen}>\n                Open dialog\n            </Button>\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} dialogs={props.dialogs}/>\n        </div>\n    );\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport default function IconLabelButtons(props) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                endIcon={<SendIcon/>}\n                onClick={props.sendMessage}\n            >\n                Send\n            </Button>\n        </div>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport s from './Dialogs.module.css';\nimport Messages from '../common/MessageBody/Messages';\nimport Input from '@material-ui/core/Input';\nimport MessageWithoutIcon from '../common/MessageBody/Message';\nimport SelectedDialogs from '../common/Material_ui/SelectedDialogs';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport ButtonSend from '../common/Material_ui/ButtonSend';\nimport {useHistory} from 'react-router-dom'\nimport Preloader from '../common/Preloader/Preloader';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        '& > *': {\n            backgroundColor: '#eaf1f6'\n        },\n    },\n}));\n\nexport const Dialogs = (props) =>{\n\n    let history = useHistory();\n\n    useEffect(() => {\n            if (!!props.userId) {\n                history.push('.')\n            }}, [])\n\n    const classes = useStyles();\n\n    let [state, setState] = useState('');\n\n    let sendMessage = () => {\n        props.sendMessage(props.selectedDialogId, state)\n        setState('')\n    }\n\n    let onTextareaHandler = (e) => {\n       setState( e.currentTarget.value)\n    }\n\n    let message;\n\n    if (props.fetching) {\n        return <Preloader/>\n    }\n\n    return <div style={{width: '100%'}}>\n        <Container maxWidth= 'sm' style={{padding: '10px'}}>\n            <Paper className={classes.root}>\n                <div\n                    className={s.dialogs}>\n                    <div className={s.ChooseDialogs}>\n                        <div>\n                            <SelectedDialogs dialogs={props.dialogsPage.dialogs}/>\n                        </div>\n                    </div>\n                    {props.userId && <div>\n                        <div className={s.messages}>\n                            {props.dialogsPage.messages.map(m => {\n                                {\n                                    message = m.viewed ? s.MessageRecipient : s.MessageRecipient + \" \" + s.unread\n                                }\n                                if (m.senderName === props.login) {\n\n                                    return <div key={m.id} className={message}>\n                                        <MessageWithoutIcon name={m.senderName} text={m.body} />\n                                    </div>\n\n                                } else {\n                                    let user = props.dialogsPage.dialogs.find((d) => {\n                                        if (d.id == props.userId) {\n                                            return d\n                                        }\n                                    })\n                                    return <div key={m.id} className={s.MessageSender}>\n                                        <Messages name={m.senderName} text={m.body} avatar={user.photos.small||user.photos.large}/>\n                                    </div>\n                                }\n                            })}\n                        </div>\n                        {props.selectedDialogId &&\n                        <div className={s.enterMessage}>\n                            <div>\n                                <Input value={state} rows={3} onChange={(e) =>\n                                    onTextareaHandler(e)} placeholder={'     Type of message...'}/>\n                                <div className={s.button}>\n                                    <ButtonSend sendMessage={sendMessage}/>\n                                </div>\n                            </div>\n                        </div>}\n                    </div>}\n                </div>\n            </Paper>\n        </Container>\n    </div>\n}\n\n","import React from 'react';\nimport {\n    getDialogs,\n    getMessages,\n    setCurrentDialogSuccess,\n    startDialog,\n    init, updateDialog, sendMessage\n} from \"../../redux/dialogs-reducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {Dialogs} from './Dialogs';\n\n\nexport class DialogsContainer extends React.Component{\n\n    componentDidMount() {\n        this.props.init(this.props.userId)\n        this.props.handleDrawerClose()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.userId !== prevProps.userId) {\n            this.props.updateDialog(this.props.userId)\n        }\n    }\n\n    render() {\n        return <>\n            <Dialogs {...this.props} />\n        </>\n    }\n\n}\n\nlet mapStateToProps = (state) => {\ndebugger\n    return {\n        dialogsPage: state.dialogsPage,\n        currentDialogId: state.dialogsPage.dialogs.id,\n        newMessagesCount: state.dialogsPage.newMessagesCount,\n        selectedDialogId: state.dialogsPage.selectedDialogId,\n        currentDialogMessagesCount: state.dialogsPage.currentDialogMessagesCount,\n        login: state.auth.login,\n        fetching: state.dialogsPage.fetching\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {\n        getDialogs,\n        startDialog,\n        getMessages,\n        setCurrentDialogSuccess,\n        init,\n        updateDialog,\n        sendMessage,\n    }),\n    withAuthRedirect\n)\n(DialogsContainer);\n"],"sourceRoot":""}